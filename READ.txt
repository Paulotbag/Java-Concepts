This activity involved developing a Library Management System using specific design patterns. The system connects to a database called "bookvault" and handles CRUD operations for an "events" table.

Here's what was done:

Factory Method Pattern: We implemented this to create different types of events depending on the library typeâ€”Public Library or Academic Library. Each library type has unique events like "Movie Night" and "Kids Story Time" for Public Libraries, and "Workshop" and "Book Launch" for Academic Libraries.

Singleton Pattern: This was used to create two key components:

DBConnection: Ensures that only one instance of the database connection is active at any time.
LMSLogger: Manages logging across the application, ensuring that logs are consistently handled with different log levels like INFO, ERROR, and WARNING.
Admission Fee Calculation: A method was implemented to calculate the admission fees for events, using predefined rates and durations.

JUnit Testing: Test cases were written to ensure that only one instance of the DBConnection and LMSLogger classes was created, and that the admission fee calculations were correct for each event type.

Overall, the project provided a scalable and extensible solution that could easily be expanded in the future to include additional functionalities.

NOTE: To make the code work, the user have to update the classpath file where it has comment to add the user's path to the MySQL connector.